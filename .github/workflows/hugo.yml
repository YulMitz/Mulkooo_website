name: Deploy Hugo site to Pages

on:
  # 當推送到 main 分支時觸發
  push:
    branches: ["main"]
  
  # 允許手動觸發
  workflow_dispatch:

# 設定權限
permissions:
  contents: read
  pages: write
  id-token: write

# 確保只有一個部署同時進行
concurrency:
  group: "pages"
  cancel-in-progress: false

# 預設 bash shell
defaults:
  run:
    shell: bash

jobs:
  # Build 工作
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.149.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      
    # Only needed if using Dart Sass
    #   - name: Install Dart Sass
    #     run: sudo snap install dart-sass
        
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
    # Only needed if having package.json in the repo
    #   - name: Install Node.js dependencies
    #     run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
        
      - name: Build with Hugo
        env:
          # 為了最大向後相容性
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deploy 工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4